<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.LightMapper">
  <resultMap id="BaseResultMap" type="com.example.model.Light">
    <id column="deviceId" jdbcType="INTEGER" property="deviceid" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="R" jdbcType="INTEGER" property="r" />
    <result column="G" jdbcType="INTEGER" property="g" />
    <result column="B" jdbcType="INTEGER" property="b" />
    <result column="is_close" jdbcType="INTEGER" property="isClose" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="rId" jdbcType="INTEGER" property="rid" />
  </resultMap>
  <sql id="Base_Column_List">
    deviceId, level, R, G, B, is_close, location, typeId, rId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from myhome.light
    where deviceId = #{deviceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from myhome.light
    where deviceId = #{deviceid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.Light">
    insert into myhome.light (deviceId, level, R,
      G, B, is_close, location, 
      typeId, rId)
    values (#{deviceid,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{r,jdbcType=INTEGER}, 
      #{g,jdbcType=INTEGER}, #{b,jdbcType=INTEGER}, #{isClose,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, 
      #{typeid,jdbcType=INTEGER}, #{rid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Light">
    insert into myhome.light
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceid != null">
        deviceId,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="r != null">
        R,
      </if>
      <if test="g != null">
        G,
      </if>
      <if test="b != null">
        B,
      </if>
      <if test="isClose != null">
        is_close,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="rid != null">
        rId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceid != null">
        #{deviceid,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="r != null">
        #{r,jdbcType=INTEGER},
      </if>
      <if test="g != null">
        #{g,jdbcType=INTEGER},
      </if>
      <if test="b != null">
        #{b,jdbcType=INTEGER},
      </if>
      <if test="isClose != null">
        #{isClose,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Light">
    update myhome.light
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="r != null">
        R = #{r,jdbcType=INTEGER},
      </if>
      <if test="g != null">
        G = #{g,jdbcType=INTEGER},
      </if>
      <if test="b != null">
        B = #{b,jdbcType=INTEGER},
      </if>
      <if test="isClose != null">
        is_close = #{isClose,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="rid != null">
        rId = #{rid,jdbcType=INTEGER},
      </if>
    </set>
    where deviceId = #{deviceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Light">
    update myhome.light
    set level = #{level,jdbcType=INTEGER},
      R = #{r,jdbcType=INTEGER},
      G = #{g,jdbcType=INTEGER},
      B = #{b,jdbcType=INTEGER},
      is_close = #{isClose,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      typeId = #{typeid,jdbcType=INTEGER},
      rId = #{rid,jdbcType=INTEGER}
    where deviceId = #{deviceid,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from myhome.light where 1=1
    <if test="rid!=null">
      and rId=#{rid}
    </if>
    <if test="keyword != null and keyword != ''">
      and (rId like '%${keyword}%')
    </if>
  </select>

  <select id="getTopRoomCount" resultType="java.util.Map">
    select count(*) c,rId from myhome.light group by rId order by count(*) desc limit 10
  </select>
</mapper>